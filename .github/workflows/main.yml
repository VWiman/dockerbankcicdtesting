name: CI to EC2

on:
  push:
    branches:
      - main

  jobs:

  test:
      name: Test with RTL
      runs-on: ubuntu-latest

      steps:
        - name: Check out Repo
          uses: actions/checkout@v4

        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: "20"

        - name: Install Dependencies
          working-directory: ./frontend
          run: npm install

        - name: Run Tests
          working-directory: ./frontend
          run: npm run test:ci
          env:
            CI: true

  deployment:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Checkout
        uses: actions/checkout@v4

      # If you need new key
      # - name: Setup Known Hosts
      #   run: |
      #     mkdir -p ~/.ssh
      #     ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "."
          target: "/home/ubuntu/dockerbankcicd"
          
      - name: Execute deployment script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }}" > /home/ubuntu/dockerbankcicd/.env
            echo "DB_USER=${{ secrets.DB_USER }}" >> /home/ubuntu/dockerbankcicd/.env
            echo "DB_PASS=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> /home/ubuntu/dockerbankcicd/.env
            echo "DB_NAME=${{ secrets.MYSQL_DATABASE }}" >> /home/ubuntu/dockerbankcicd/.env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> /home/ubuntu/dockerbankcicd/.env
            cd /home/ubuntu/dockerbankcicd
            docker-compose down
            docker-compose up --build -d
